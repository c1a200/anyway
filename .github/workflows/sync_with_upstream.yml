name: SYNC FORK

on:
  schedule:
    - cron: '0 0 * * *' # 每天运行一次
  workflow_dispatch: # 允许手动触发

jobs:
  sync:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0 # 确保获取所有历史记录

    - name: Configure git
      run: |
        git config --global user.name 'Auto merge'
        git config --global user.email 'Auto merge'

    - name: Sync with Upstream
      run: |
        # 检查upstream是否已经存在
        if ! git remote get-url upstream; then
          git remote add upstream https://github.com/wzdnzd/aggregator.git
        fi
        git fetch upstream
        git checkout main # 更新为实际的分支名称
        # 检查是否有更新
        git fetch origin main # 更新为实际的分支名称
        git fetch upstream main # 更新为实际的分支名称
        UPSTREAM_SHA=$(git rev-parse upstream/main) # 更新为实际的分支名称
        LOCAL_SHA=$(git rev-parse main) # 更新为实际的分支名称
        ORIGIN_SHA=$(git rev-parse origin/main) # 更新为实际的分支名称
        # 只有当上游更新且本地分支与origin相同时，才进行合并
        if [ "$UPSTREAM_SHA" != "$LOCAL_SHA" ] && [ "$LOCAL_SHA" == "$ORIGIN_SHA" ]; then
          git merge upstream/main # 更新为实际的分支名称
          git push
        else
          echo "没有可同步的更新，跳过合并操作。"
        fi
